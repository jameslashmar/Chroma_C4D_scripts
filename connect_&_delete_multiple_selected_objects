import c4d

def connect_and_delete(doc, op):
    if not op: return None

    # Store the original matrix, parent, and name
    original_matrix = op.GetMg()
    original_parent = op.GetUp()
    original_name = op.GetName()
    original_next = op.GetNext()

    # Create a new null object to hold the clone
    null = c4d.BaseObject(c4d.Onull)
    doc.InsertObject(null, parent=original_parent, pred=op)

    # Clone children and insert them under the null
    for child in op.GetChildren():
        clone = child.GetClone()
        clone.InsertUnderLast(null)

    # Select the null to perform the connect objects + delete
    doc.AddUndo(c4d.UNDOTYPE_CHANGE_SELECTION, doc)
    doc.SetActiveObject(null, c4d.SELECTION_NEW)
    
    # Call the 'Connect Objects + Delete' command
    c4d.CallCommand(16768)  # Connect Objects + Delete
    
    # Get the newly connected object (which replaces the null)
    connected = doc.GetActiveObject()

    # If the connected object is created successfully, set its original matrix and name
    if connected:
        connected.SetMg(original_matrix)
        connected.SetName(original_name)  # Set the name of the connected object to the original name
        # Move the connected object back to the original parent and position
        connected.Remove()
        if original_next:
            doc.InsertObject(connected, parent=original_parent, pred=original_next.GetPred())
        else:
            doc.InsertObject(connected, parent=original_parent)

    # Delete the original object
    doc.AddUndo(c4d.UNDOTYPE_DELETE, op)
    op.Remove()

    # Update the scene
    doc.EndUndo()
    c4d.EventAdd()

def main():
    # Get the list of selected objects
    selection = doc.GetActiveObjects(c4d.GETACTIVEOBJECTFLAGS_CHILDREN)

    # If nothing is selected, stop the script
    if not selection:
        c4d.gui.MessageDialog("Please select at least one object.")
        return

    # Start undo action
    doc.StartUndo()

    # Operate on a copy of the selection to avoid iteration issues
    for obj in selection[:]:
        connect_and_delete(doc, obj)

    # End undo action
    doc.EndUndo()
    c4d.EventAdd()

# Execute main
if __name__=='__main__':
    main()
